1.jdk 和 jre的区别

2.== 和equals的区别
    ==：比较的是两个字符串内存地址（堆内存）的数值是否相等，属于数值比较；
    equals()：比较的是两个字符串的内容，属于内容比较。

    == 的作用：
    　　基本类型：比较的就是值是否相同
    　　引用类型：比较的就是地址值是否相同
    equals 的作用:
        引用类型：默认情况下，比较的是地址值。
        不过，我们可以根据情况自己重写该方法。一般重写都是自动生成，比较对象的成员变量值是否相同
        以后进行字符串相等判断的时候都使用equals()。

3.两个对象的hashCode相同，则equals也为true么？
    两个对象用equals方法比较为true，它们的Hashcode值相同吗？
        答：不一定相同。正常情况下，因为equals()方法比较的就是对象在内存中的值，如果值相同，那么Hashcode值
        也应该相同。但是如果不重写hashcode方法，就会出现不相等的情况。
        两个对象equals相等，则它们的hashcode必须相等，反之则不一定。

4.final在java中的作用
    final关键字可以用于三个地方。用于修饰类、类属性和类方法。
    被final关键字修饰的类不能被继承，被final关键字修饰的类属性和类方法不能被覆盖（重写）；

5.java中Math.round(-1.5)用法    : -1
    Math.round()的原理是对传入的参数+0.5之后，再向下取整得到的数就是返回的结果，返回值为long型。
    这里的向下取整是说取比它小的第一个整数或者和它相等的整数。

    四舍五入的原理是在参数上加0.5然后做向下取整

    而“向下取整”实际上就是Math.floor()方法，注意Math.floor()返回的值为double类型的。
    类似地，还有一个Math.ceil()方法，表示“向上取整”，得到的结果是比参数大的第一个整数或者和参数相等的数，
    返回值也是double类型的。

6.String属于基础的数据类型么？
    String不是基本的数据类型，是final修饰的java类，java中的基本类型一共有8个，它们分别为：

    1 字符类型：byte，char
    2 基本整型：short，int，long
    3 浮点型：float，double
    4 布尔类型：boolean
    java 中String 是个对象，是引用类型 ;
    基础类型与引用类型的区别是:
        基础类型只表示简单的字符或数字，引用类型可以是任何复杂的数据结构 ，基本类型仅表示简单的数据类型，
        引用类型可以表示复杂的数据类型，还可以操作这种数据类型的行为 。

    java虚拟机处理基础类型与引用类型的方式是不一样的，对于基本类型，java虚拟机会为其分配数据类型实际占用
    的内存空间，而对于引用类型变量，他仅仅是一个指向堆区中某个实例的指针。

    基本数据类型和引用类型的区别主要在于基本数据类型是分配在栈上的，而引用类型是分配在堆上的

7.java中操作字符串都有哪些类型？

8.String str = "i"与String str = new String("i")一样么？
    str:str指向“i”的内存地址
    str：内存中重新分配一块区域存储"i",然后str指向i的内存地址
    实际上就是内存中有两个i对象，但是存放的地址不一样。

9.将字符串反转
10.String类常用的方法
11.抽象类必须有抽象方法么？
12.普通类与抽象类的区别？
13.抽象类能用final修饰么
14.接口与抽象类的区别
15.java中IO流分为几种
16.BIO、NIO、AIO的区别
17.Files的常用方法
