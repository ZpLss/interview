statement与prepareStatement的区别

    p支持预编译，批量处理效率更高
    s每次执行sql语句都要进行编译，批量处理效率低
    2>安全性问题

    这个就不多说了，preStatement是预编译的，所以可以有效的防止 SQL注入等问题

    所以 preStatement 的安全性 比 Statement 高

    3>代码的可读性 和 可维护性
    这点也不用多说了，你看老代码的时候  会深有体会

索引使用规则：
    如果索引字段是上使用了函数，导致索引失效
    如果索引字段上使用了运算，导致索引失效
    如果索引字段上产生了隐式类型转换，导致索引失效
    如果索引字段上进行了模糊查询，只支持前置条件的模糊查询，其他索引失效

mysql有哪几种索引
    从物理存储角度

    1、聚集索引（clustered index）
    2、非聚集索引（non-clustered index）

    从数据结构角度

    1、B+树索引(O(log(n)))：关于B+树索引，可以参考 MySQL索引背后的数据结构及算法原理

    2、hash索引：
        a 仅仅能满足"=","IN"和"<=>"查询，不能使用范围查询
        b 其检索效率非常高，索引的检索可以一次定位，不像B-Tree 索引需要从根节点到枝节点，最后才能访问到页节点这样多次的IO访问，所以 Hash 索引的查询效率要远高于 B-Tree 索引
        c 只有Memory存储引擎显示支持hash索引
    3、FULLTEXT索引（现在MyISAM和InnoDB引擎都支持了）
    4、R-Tree索引（用于对GIS数据类型创建SPATIAL索引）

B+树与B树结构的区别

Mysql在V5.1之前默认存储引擎是MyISAM；在此之后默认存储引擎是InnoDB

    1. 区别：
    （1）事务处理：
    MyISAM是非事务安全型的，而InnoDB是事务安全型的（支持事务处理等高级处理）；
    （2）锁机制不同：
    MyISAM是表级锁，而InnoDB是行级锁；
    （3）select ,update ,insert ,delete 操作：
    MyISAM：如果执行大量的SELECT，MyISAM是更好的选择
    InnoDB：如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表
    （4）查询表的行数不同：
    MyISAM：select count(*) from table,MyISAM只要简单的读出保存好的行数，注意的是，当count(*)语句包含   where条件时，两种表的操作是一样的
    InnoDB ： InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，InnoDB要扫描一遍整个表来计算有多少行
    （5）外键支持：
    mysiam表不支持外键，而InnoDB支持

    2. 为什么MyISAM会比Innodb 的查询速度快。
    INNODB在做SELECT的时候，要维护的东西比MYISAM引擎多很多；
    1）数据块，INNODB要缓存，MYISAM只缓存索引块，  这中间还有换进换出的减少；
    2）innodb寻址要映射到块，再到行，MYISAM 记录的直接是文件的OFFSET，定位比INNODB要快
    3）INNODB还需要维护MVCC一致；虽然你的场景没有，但他还是需要去检查和维护
    MVCC ( Multi-Version Concurrency Control )多版本并发控制

    3. 应用场景
    MyISAM适合：(1)做很多count 的计算；(2)插入不频繁，查询非常频繁；(3)没有事务。
    InnoDB适合：(1)可靠性要求比较高，或者要求事务；(2)表更新和查询都相当的频繁，并且行锁定的机会比较大的情况。


ACID 一般是指数据库事务的ACID

    一个事务一般是指多个操作的集合，比如插入数据库分两段插入，第二次插入错误，第一次插入操作也需要回退

    ACID的翻译

    1.Atomicity 原子性

    2.Consistency 一致性

    3.Isolation 隔离性

    4.Durability 耐久性

    原子性，指的是整个事务是一个独立的单元，要么操作成功，要么操作不成功

    一致性，事务必须要保持和系统处于一致的状态（如果不一致会导致系统其它的方出现bug）

    隔离性，事务是并发控制机制，他们的交错也需要一致性，隔离隐藏，一般通过悲观或者乐观锁实现

    耐久性，一个成功的事务将永久性地改变系统的状态，所以在它结束之前，所有导致状态的变化都记录在一个持久的事务日志中

数据库事务的隔离级别有4种，由低到高分别为Read uncommitted 、Read committed 、Repeatable read 、Serializable 。
而且，在事务的并发操作中可能会出现脏读，不可重复读，幻读。下面通过事例一一阐述它们的概念与联系。

InnoDB使用不同的锁策略(Locking Strategy)来实现不同的隔离级别。

Redis是内存数据库，数据保存在内存中，访问速度快。MySQL是关系型数据库，功能强大，存储在磁盘中，数据访问速度慢。

索引的类型：
普通索引
唯一索引
主键索引
组合索引
全文索引
